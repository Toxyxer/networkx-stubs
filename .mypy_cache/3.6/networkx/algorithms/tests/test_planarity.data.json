{".class": "MypyFile", "_fullname": "networkx.algorithms.tests.test_planarity", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "TestLRPlanarity": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity", "name": "TestLRPlanarity", "type_vars": []}, "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity", "metaclass_type": null, "metadata": {}, "module_name": "networkx.algorithms.tests.test_planarity", "mro": ["networkx.algorithms.tests.test_planarity.TestLRPlanarity", "builtins.object"], "names": {".class": "SymbolTable", "check_graph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["G", "is_planar"], "flags": ["is_static", "is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.check_graph", "name": "check_graph", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_staticmethod"], "fullname": null, "name": "check_graph", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["G", "is_planar"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "check_graph", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "test_comp": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_comp", "name": "test_comp", "type": null}}, "test_counterexample_planar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_counterexample_planar", "name": "test_counterexample_planar", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_counterexample_planar", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_counterexample_planar_recursive": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_counterexample_planar_recursive", "name": "test_counterexample_planar_recursive", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_counterexample_planar_recursive", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_goldner_harary": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_goldner_harary", "name": "test_goldner_harary", "type": null}}, "test_graph1": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_graph1", "name": "test_graph1", "type": null}}, "test_graph2": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_graph2", "name": "test_graph2", "type": null}}, "test_graph3": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_graph3", "name": "test_graph3", "type": null}}, "test_k3_3": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_k3_3", "name": "test_k3_3", "type": null}}, "test_k5": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_k5", "name": "test_k5", "type": null}}, "test_loop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_loop", "name": "test_loop", "type": null}}, "test_multiple_components_non_planar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_multiple_components_non_planar", "name": "test_multiple_components_non_planar", "type": null}}, "test_multiple_components_planar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_multiple_components_planar", "name": "test_multiple_components_planar", "type": null}}, "test_non_planar1": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_non_planar1", "name": "test_non_planar1", "type": null}}, "test_non_planar_digraph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_non_planar_digraph", "name": "test_non_planar_digraph", "type": null}}, "test_non_planar_multigraph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_non_planar_multigraph", "name": "test_non_planar_multigraph", "type": null}}, "test_non_planar_with_selfloop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_non_planar_with_selfloop", "name": "test_non_planar_with_selfloop", "type": null}}, "test_planar_digraph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_planar_digraph", "name": "test_planar_digraph", "type": null}}, "test_planar_multigraph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_planar_multigraph", "name": "test_planar_multigraph", "type": null}}, "test_planar_with_selfloop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_planar_with_selfloop", "name": "test_planar_with_selfloop", "type": null}}, "test_simple_planar_graph": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_simple_planar_graph", "name": "test_simple_planar_graph", "type": null}}, "test_single_component": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestLRPlanarity.test_single_component", "name": "test_single_component", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TestPlanarEmbeddingClass": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass", "name": "TestPlanarEmbeddingClass", "type_vars": []}, "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass", "metaclass_type": null, "metadata": {}, "module_name": "networkx.algorithms.tests.test_planarity", "mro": ["networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass", "builtins.object"], "names": {".class": "SymbolTable", "get_star_embedding": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["n"], "flags": ["is_static", "is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.get_star_embedding", "name": "get_star_embedding", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_staticmethod"], "fullname": null, "name": "get_star_embedding", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["n"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "get_star_embedding", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "test_connect_components": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_connect_components", "name": "test_connect_components", "type": null}}, "test_get_data": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_get_data", "name": "test_get_data", "type": null}}, "test_invalid_edge_orientation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_invalid_edge_orientation", "name": "test_invalid_edge_orientation", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_invalid_edge_orientation", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_missing_edge_orientation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_missing_edge_orientation", "name": "test_missing_edge_orientation", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_missing_edge_orientation", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_missing_half_edge": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_missing_half_edge", "name": "test_missing_half_edge", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_missing_half_edge", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_missing_reference": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_missing_reference", "name": "test_missing_reference", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_missing_reference", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_not_fulfilling_euler_formula": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_not_fulfilling_euler_formula", "name": "test_not_fulfilling_euler_formula", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_not_fulfilling_euler_formula", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}, "test_successful_face_traversal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_successful_face_traversal", "name": "test_successful_face_traversal", "type": null}}, "test_unsuccessful_face_traversal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "networkx.algorithms.tests.test_planarity.TestPlanarEmbeddingClass.test_unsuccessful_face_traversal", "name": "test_unsuccessful_face_traversal", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": null, "name": "test_unsuccessful_face_traversal", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}, "type_of_any": 7}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.__package__", "name": "__package__", "type": "builtins.str"}}, "assert_equals": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_suppressed_import", "is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.assert_equals", "name": "assert_equals", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.assert_equals", "source_any": null, "type_of_any": 3}}}, "assert_true": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_suppressed_import", "is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.assert_true", "name": "assert_true", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.assert_true", "source_any": null, "type_of_any": 3}}}, "check_counterexample": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["G", "sub_graph"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.check_counterexample", "name": "check_counterexample", "type": null}}, "check_embedding": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["G", "embedding"], "flags": [], "fullname": "networkx.algorithms.tests.test_planarity.check_embedding", "name": "check_embedding", "type": null}}, "check_planarity_recursive": {".class": "SymbolTableNode", "cross_ref": "networkx.algorithms.planarity.check_planarity_recursive", "kind": "Gdef"}, "get_counterexample": {".class": "SymbolTableNode", "cross_ref": "networkx.algorithms.planarity.get_counterexample", "kind": "Gdef"}, "get_counterexample_recursive": {".class": "SymbolTableNode", "cross_ref": "networkx.algorithms.planarity.get_counterexample_recursive", "kind": "Gdef"}, "nx": {".class": "SymbolTableNode", "cross_ref": "networkx", "kind": "Gdef"}, "raises": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_suppressed_import", "is_ready"], "fullname": "networkx.algorithms.tests.test_planarity.raises", "name": "raises", "type": {".class": "AnyType", "missing_import_name": "networkx.algorithms.tests.test_planarity.raises", "source_any": null, "type_of_any": 3}}}}, "path": "/home/fmagin/.virtualenvs/angr/lib/python3.7/site-packages/networkx/algorithms/tests/test_planarity.py"}